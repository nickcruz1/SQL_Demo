-- Demonstration of SQL Syntax/Queries Pulled From Home Database (Include 3 Queries For Each Example From Home Database)

-- SQL Select Statements 
1. SELECT * FROM tbl_employees;
2. SELECT firstname AS First_Name, lastname AS Last_Name, address As Emp_Address from tbl_employees;
3. 


-- Select (Distinct)
1.
2. 
3. 


-- Where 
1. SELECT PersonID, FirstName, Address, City, Salary 
FROM tbl_employees 
WHERE CITY IN ('Seaford','Bethany Beach', 'Greenwood')
ORDER BY Salary ASC;
2. 
3. 



-- And
1.
2. 
3. 



-- OR
1.
2. 
3. 
 

-- SQL Not
1.
2. 
3. 
 

-- SQL Insert Into
INSERT INTO tbl_employees (PersonID, LastName, FirstName, Address, City, State_name) 
VALUES (3, 'Cal','Bryan','25 Cedar Pike','Greenwood','Delaware');
2. INSERT INTO tbl_state (countyID, countyname, city, streetname, population, regionID)
VALUES (10, 'New Castle', 'Bear', 'Benjamin Drive', 253, '5');
3. 
 

-- SQL Null Values 
1.
2. 
3. 
 


-- SQL Update Values 
1. UPDATE tbl_employees
SET Salary = 56125
WHERE PersonID = 1;
2. 
3. 
 

-- SQL Delete
1.
2. 
3. 


-- SQL Select Top 
1.
2. 
3. 



-- SQL Min and Max
1.
2. 
3. 
 


-- SQL Count 
1.
2. 
 


-- SQL Sum 
1.
2. 
3. 



-- SQL Avg 
1.
2. 
3. 
 


-- SQL Like 
1.
2. 
3. 
 

-- SQL Wildcards
1. SELECT * FROM tbl_state
WHERE CountyName LIKE '__w%astl_'
OR CITY LIKE '%_ar';
2. SELECT * FROM tbl_state
WHERE CITY IN ('New Castle', 'Kent') 
OR CITY LIKE 'B-D%';
3. SELECT * FROM tbl_state
WHERE CountyName IN ('New Castle', 'Kent') 
OR CITY LIKE '[M]%';

-- SQL In
1. SELECT FirstName, Address, City
FROM tbl_employees 
WHERE CITY IN ('Rehoboth Beach', 'Milford', 'Seaford');
2. 
3. 
 


--SQL Between 
1. SELECT PersonID, LastName, City, Salary
FROM tbl_employees 
WHERE Salary BETWEEN 10000 AND 40000;
2. SELECT CountyName FROM tbl_state 
WHERE CountyID BETWEEN 10 AND 20;
3. 
 

-- SQL Joins 
1.
2. 
3. 


-- SQL Inner Join 
1.
2. 
3. 


-- SQL Left Join 
1.
2. 
3. 



-- SQL Right Join 
1.
2. 
3. 
 

-- SQL Full Join 
1.
2. 
3. 
 

-- SQL Union
1.
2. 
3. 



-- SQL Group By 
1.
2. 
3. 



-- SQL Having 
1.
2. 
3. 



-- SQL Exists
1.
2. 
3. 



-- SQL Any, All 
1.
2. 
3. 


-- SQL Select Into 
1.
2. 
3. 


-- SQL Insert Into Select 
1.
2. 
3. 


-- SQL Case 
1.
2. 
3. 


-- SQL Stored Procedures 
1.
2. 
3. 


-- SQL Comments 
1. -- This is a single line comment
2. /* These are multi line comments. 
You can write as much as you want as long as the comments
start with a dash (/) and then an asterik (*) afterwards then closed with
-> */
3. -- More single line comments 

-- SQL Operators 
1.
2. 
3. 

-- SQL Drop DB
1.
2. 
3. 

-- SQL Create Table 
1. CREATE TABLE tbl_employees (
    PersonID int,
    LastName varchar(255),
    FirstName varchar(255),
    Address varchar(255),
    City varchar(255),
    State_name varchar (255),
    Primary Key (PersonID)
);
2. CREATE TABLE tbl_nation (
    nationID int,
    regionID int NOT NULL,
    stateID int NOT NULL,
    population int NOT NULL,
    Primary Key (nationID)
);
3. CREATE TABLE tbl_region (
    regionID int,
    nationID int,
    stateID int,
    countyname varchar(255),
    city varchar(255),
    streetname varchar(255),
    population int,
    Primary Key (regionID),
    Foreign Key (nationID) References tbl_nation(nationID)
);

-- SQL Drop Table 
1.
2. 
3. 


-- SQL Alter Table 
1. ALTER TABLE tbl_employees 
ADD Salary int;
2. 
3. 


-- SQL Not Null
1.
2. 
3. 

-- SQL Check
1.
2. 
3. 


-- SQL Default 
1.
2. 
3. 


-- SQL Index 
1.
2. 
3. 


-- SQL Auto Increment 
1.
2. 
3. 


-- SQL Dates 
1.
2. 
3. 


-- SQL Views 
1.
2. 
3. 

